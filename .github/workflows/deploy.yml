name: "🚀 Deploy michaellutaaya.com"

# https://stackoverflow.com/a/69341682
env:
  SSH_AUTH_SOCK: /tmp/ssh_agent.sock

on:
  workflow_dispatch:
  push:
    branches:
      - main

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: deploy-michaellutaaya
  cancel-in-progress: false

jobs:
  deploy:
    name: "🚚 Upload files from GitHub to remote server"
    runs-on: ubuntu-latest
    steps:
      - name: "🛒 Checkout main branch"
        uses: actions/checkout@v4
      - name: "👍 Write known hosts to file"
        run:  echo "${{ secrets.KNOWN_HOSTS }}" > ~/.ssh/known_hosts
      - name: "➕ Add key and passphrase to SSH agent"
        env:
          SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }}
          SSH_PRIVATE_KEY: ${{ secrets.PRIVATE_SSH_KEY }}
        run:  |
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          echo 'echo $SSH_PASSPHRASE' > ~/.ssh_askpass && chmod +x ~/.ssh_askpass
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | DISPLAY=None SSH_ASKPASS=~/.ssh_askpass ssh-add - >/dev/null
      - name: "🚚 Transfer files to remote server"
        run:  |
          rsync -a --stats --delete \
            --exclude-from=.rsyncignore \
            --exclude-from=.gitignore \
            ./ "${{ secrets.REMOTE_USER }}"@"${{ secrets.REMOTE_HOST }}":/var/www/michaellutaaya.com/html
  purge-cache:
    name: "🔥 Purge Cloudflare cache"
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - name: "🔥 Purge everything"
        run:  |
          curl -f -X POST \
          --url "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_IDENTIFIER }}/purge_cache" \
          -H 'Content-Type: application/json' \
          -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
          -d '{"purge_everything": true}'
